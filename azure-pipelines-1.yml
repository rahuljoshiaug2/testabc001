trigger: none
pool: RahulAgentPool
variables:
  backend_scn: 'RahulServiceConnection'   # Define the variable here
  config_path: '$(System.DefaultWorkingDirectory)'
  runVdate: true   # Convert parameters to variables
  runFmt: true
  runPlan: true
  runApply: true

steps:
- task: TerraformInstaller@1
  displayName: 'Install terraform'
  inputs:
    terraformVersion: 'latest'

- task: TerraformTask@5
  displayName: 'Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(config_path)'
    backendServiceArm: '$(backend_scn)'
    backendAzureRmStorageAccountName: 'stgtest0076'
    backendAzureRmContainerName: 'statefiles'
    backendAzureRmKey: 'rahul.tfstate'

- task: TerraformTask@5
  displayName: 'terraform fmt'
  inputs:
    provider: 'azurerm'
    command: 'custom'
    outputTo: 'console'
    customCommand: 'fmt'
    environmentServiceNameAzureRM: '$(backend_scn)'
  condition: eq(variables.runFmt, true)  # Use condition here instead of `if`

- task: TerraformTask@5
  displayName: 'terraform validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'
  condition: eq(variables.runVdate, true)  # Use condition here instead of `if`

- task: TerraformTask@5
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: '$(backend_scn)'
  condition: eq(variables.runPlan, true)  # Use condition here instead of `if`

- task: TerraformTask@5
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '-auto-approve'
    environmentServiceNameAzureRM: '$(backend_scn)'
  condition: eq(variables.runApply, true)  # Use condition here instead of `if`
